// import Link from "next/link";
import { useState, useEffect } from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import axios from "axios";
import { Posts } from "./components/Posts";
import Pagination from "@mui/material/Pagination";
import Stack from "@mui/material/Stack";

const defaultEndpoint = "http://ted-talk-api.herokuapp.com/talks";

export const getStaticProps = async () => {
  const data = await axios(defaultEndpoint).then((response) => {
    return response.data;
  });

  return {
    props: {
      data,
    },
  };
};

export default function Home({ data }) {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(false);
  const [currentPage, setCurrentPage] = useState(1);
  const [postsPerPage] = useState(50);
  const [totalPage, setTotalPage] = useState(0);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      await setPosts(data);
      setLoading(false);
    };

    setTotalPage(Math.ceil(data.length / postsPerPage));

    fetchPosts();
  }, []);

  // Get Current Post
  const indexOfLastPost = currentPage * postsPerPage;
  const indexOfFirstPost = indexOfLastPost - postsPerPage;
  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);

  const renderPagination = () => {
    return (
      <div>
        <Stack spacing={2}>
          <Pagination
            count={totalPage}
            page={currentPage}
            variant="outlined"
            // color="secondary"
            onChange={handleChange}
          />
        </Stack>
      </div>
    );
  };

  const handleChange = async (event, value) => {
    setCurrentPage(value);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>TED talks</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <a>
            <span>TED</span>ed
          </a>
        </h1>
        <Posts posts={currentPosts} loading={loading} />

        {renderPagination()}
      </main>
    </div>
  );
}
