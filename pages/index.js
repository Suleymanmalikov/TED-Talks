import Link from 'next/link'
import { useState, useEffect } from 'react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import axios from 'axios';
// import BsEyeFill from 'react-icons/bs'
import {BsEyeFill} from 'react-icons/bs';
import {AiFillLike, AiOutlineSearch} from 'react-icons/ai'


// const defaultEndpoint = 'https://rickandmortyapi.com/api/character';
const defaultEndpoint = 'http://ted-talk-api.herokuapp.com/talks';

export async function getServerSideProps() {
  const data = await axios(defaultEndpoint)
  .then(response =>{
    return response.data;
  })
  // const res = await axios.get(defaultEndpoint);
  // const data = await res.json();
  // console.log(data);
  return{
    props: {
      data
    }
  }
}

export default function Home({ data }) {
  const {info, results: defaultResults = []} = data;
  const [ results, updateResults] = useState(defaultResults);
  const [ page, updatePage] = useState({
    ...info,
    current: defaultEndpoint
  })
  const { current } = page;

  useEffect(() => {
    if ( current === defaultEndpoint ) return;

    async function request() {
      const res = await fetch(current);
      const nextData = await res.json();
      
      // (response =>{
      //   return response.nextData;
      // })
    
      updatePage ({
        current,
        ...nextData.info
      });

      if( !nextData.info?.prev){
        updateResults(nextData.results);
        return;
      }

      updateResults (prev => {
        return[
          ...prev,
          ...nextData.results
        ]
      })
    }

    request();
  }, [current]);

  function handleLoadMore() {
    updatePage(prev => {
      return{
        ...prev,
        current: page?.next
      }
    })
  }

  function handleOnSubmitSearch(e){
    e.preventDefault();

    const { currentTarget = {} } = e;
    const fields = Array.from(currentTarget?.elements);
    const fieldQuery = fields.find(field => field.name === 'query');

    const value = fieldQuery.value || '';
    const endpoint = `http://ted-talk-api.herokuapp.com/talks?keyword=${value}`;
    // const endpoint = `https://rickandmortyapi.com/api/character/?name=${value}`;

    
    // console.log(endpoint)

    updatePage({
      current: endpoint
    });
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>TED talks</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <a><span>TED</span>ed</a> 
        </h1>
        <div>
          <form className={styles.search} onSubmit={handleOnSubmitSearch}>
            <input className={styles.searchTerm} placeholder='Search'name='query' type='search'/>
            <button className={styles.searchButton}><AiOutlineSearch /></button>
          </form>

        </div>

        <ul className={styles.grid}>
          {data.map(result =>{
            const { id, title, img, views,likes, author, date } = result;

            return (
            <li key={id} className={styles.card}>
              <Link href='/character/[id]' as={`/character/${id}`}>
                <a>
                  <img  src={img} alt={`${title} Thumb`}/> 
                  {/* <h1>{ id } </h1> */}
                  <ul className={styles.views_likes}>
                    <li><BsEyeFill /> {views}</li>
                    <li><AiFillLike /> {likes}</li>
                  </ul>
                  <p className={styles.date}>{ date }</p>
                  <p className={styles.author}>{ author }</p>
                  <h2>{ title }</h2>
                </a>
              </Link>
            </li>
            )
          })}
        </ul>

        <p>
          <button onClick={handleLoadMore}>Load More</button>
        </p>
      </main>
    </div>
  )
}
